@model IndignadoFramework.Entities.Movimiento

@{
    ViewBag.Title = "Modificar Movimiento";
}

<h2>Modificar Movimiento</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>

<script type="text/javascript" src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0"></script>

      <script type="text/javascript">
          var map = null;
          var click;
          function getMap() {
              map = new Microsoft.Maps.Map(document.getElementById('myMap'), { credentials: 'AjKX5fPclkvH3YTYhLImWMour1KISHMrcFVBrXzVsjqwMLiWobOq83esCN1ra0Q0' });
          }

          function mapClickEventHandler() {
              click = Microsoft.Maps.Events.addHandler(map, 'click', displayInfo);
              alert('Perform action on map to fire this event');
          }
          function detachMapClickEventHandler() {
              Microsoft.Maps.Events.removeHandler(click);
              alert('event detached');
          }
          displayInfo = function (e) {
              var output = document.getElementById("output");
              if (!output) {
                  output = document.createElement("div");
                  output.id = "output";
                  document.body.appendChild(output);
              }
              output.innerHTML = "Event info - " + e.eventName + "<br><br>"
                           + "Window:" + e.originalEvent.screenX + "(x) " + e.originalEvent.screenY + "(y)<br>"
                           + "client:" + e.originalEvent.clientX + "(x) " + e.originalEvent.clientY + "(y)<br>"
                           + "Keychar:" + e.originalEvent.keyCode + "<br>"
                           + "keys  :" + e.originalEvent.altKey + "(alt) " + e.originalEvent.ctrlKey + "(ctrl) " + e.originalEvent.shiftKey + "(shift)<br>";
          };

          function setView() {
//              var valueLatitude = "@Model.UbicacionLatitud".split(",");
//              var valueLongitud = "@Model.UbicacionLongitud".split(",");

//              map.setView({ zoom: 12, center: new Microsoft.Maps.Location(parseFloat(valueLatitude[0] + "." + valueLatitude[1]), parseFloat(valueLongitud[0] + "." + valueLongitud[1])) });
//              
              if ("@Model.UbicacionLatitud".indexOf(",") != -1 || "@Model.UbicacionLongitud".indexOf(",") != -1) {
                  var valueLatitude = "@Model.UbicacionLatitud".split(",");
                  var valueLongitud = "@Model.UbicacionLongitud".split(",");

                  map.setView({ zoom: 12, center: new Microsoft.Maps.Location(parseFloat(valueLatitude[0] + "." + valueLatitude[1]), parseFloat(valueLongitud[0] + "." + valueLongitud[1])) });
              } else {
                  map.setView({ zoom: 12, center: new Microsoft.Maps.Location(parseFloat("@Model.UbicacionLatitud"), parseFloat("@Model.UbicacionLongitud")) });
              }
          }

          endDragDetails = function (e) {

              var $latitud = $('#UbicacionLatitud');
              var valueLatitude = $latitud.val();
              var $longitud = $('#UbicacionLongitud');
              var valueLongitud = $longitud.val();

              valueLatitude = e.entity.getLocation().latitude.toString();
              $latitud.val(valueLatitude);
              valueLongitud = e.entity.getLocation().longitude.toString();
              $longitud.val(valueLongitud);

          };

          function addPinPin() {
//              var pushpinOptions = { draggable: true };

//              var valueLatitude = "@Model.UbicacionLatitud".split(",");
//              var valueLongitud = "@Model.UbicacionLongitud".split(",");

//              var pushpin = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(parseFloat(valueLatitude[0] + "." + valueLatitude[1]), parseFloat(valueLongitud[0] + "." + valueLongitud[1])), pushpinOptions);
//              var pushpindragend = Microsoft.Maps.Events.addHandler(pushpin, 'dragend', endDragDetails);
//              map.entities.push(pushpin);

              var pushpinOptions = { draggable: true };

              if ("@Model.UbicacionLatitud".indexOf(",") != -1 || "@Model.UbicacionLongitud".indexOf(",") != -1) {
                  var valueLatitude = "@Model.UbicacionLatitud".split(",");
                  var valueLongitud = "@Model.UbicacionLongitud".split(",");

                  var pushpin = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(parseFloat(valueLatitude[0] + "." + valueLatitude[1]), parseFloat(valueLongitud[0] + "." + valueLongitud[1])), pushpinOptions);
                  var pushpindragend = Microsoft.Maps.Events.addHandler(pushpin, 'dragend', endDragDetails);
                  map.entities.push(pushpin);
              } else {
                  var pushpin = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(parseFloat("@Model.UbicacionLatitud"), parseFloat("@Model.UbicacionLongitud")), pushpinOptions);
                  var pushpindragend = Microsoft.Maps.Events.addHandler(pushpin, 'dragend', endDragDetails);
                  map.entities.push(pushpin);
              }
          }



          $(document).ready(function () {
              getMap(); setView(); $("#selectLogo").change(function () {
                  $("#Logo").val("http://repoindignado.blob.core.windows.net/imagenes" + "@Model.Id.ToString()" + "/" + $(this).val());
              });
          });
          $(window).load(function () { addPinPin(); });



</script>



@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>@Model.Nombre</legend>

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Nombre)

        
        <input type="hidden" id="UbicacionLatitud" name="UbicacionLatitud" value="@Model.UbicacionLatitud" />

        <input type="hidden" id="UbicacionLongitud" name="UbicacionLongitud" value="@Model.UbicacionLongitud" />

        <div> 
            <div id='myMap' style="position:absolute; margin-left:400px; width:400px; height:400px;"></div>
            <div id='output'> </div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Descripcion)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Descripcion)
            @Html.ValidationMessageFor(model => model.Descripcion)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Logo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Logo)
            @Html.ValidationMessageFor(model => model.Logo)
        </div>

        <div class="editor-label">
                       @{List<SelectListItem> items = new List<SelectListItem>();
            items.Add(new SelectListItem
                    {
                        Text = "Blue",
                        Value = "0"
                    });
            items.Add(new SelectListItem
                    {
                        Text = "Black",
                        Value = "1"
                    });
            items.Add(new SelectListItem
                    {
                        Text = "Red",
                        Value = "2",
                    });
        }
        @Html.Label("Estilo", new { @class = "DropDownList" })
        @Html.DropDownList("Estilo", items, new { style = " width: 300px; box-shadow: 2px 2px 2px #888888; background-color: #fff; border: 3px solid #99f; cursor: pointer; font-size: 1.2em; font-size: 1.2em; color: #333;" })
            @*
            @Html.EditorFor(model => model.Estilo)
            @Html.ValidationMessageFor(model => model.Estilo)*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.M)
            (Numero de contenidos rankeados por tiempo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.M)
            @Html.ValidationMessageFor(model => model.M)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.N) 
            (Numero de contenidos rankeados por marcas de me gusta)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.N)
            @Html.ValidationMessageFor(model => model.N)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.X) 
            (Numero maximo de marcas de contenidos inadecuados)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.X)
            @Html.ValidationMessageFor(model => model.X)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Z)
            (Numero maximo de contenidos inadecuados por usuario)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Z)
            @Html.ValidationMessageFor(model => model.Z)
        </div>

        <p>
            <input type="submit" value="Guardar" />
        </p>
    </fieldset>
    
    <div>  
        @Html.DropDownList("selectLogo", new SelectList(ViewBag.Blobs, "Name", "Name"), "Seleccione el logo" )
    </div>
    
}

<div>

    @using (Html.BeginForm("upfile", "movimiento", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <input type="file" name="fileBase" />
        <p>
            <input type="submit" value="Upload" />
        </p>
    }
    
    <h2>Galeria de Imagenes</h2>

    @foreach (var item in ViewBag.Blobs)
    {
        <img alt="Image" srC="@item.Uri.ToString()" width="200" height="200" />
        <p>
        
                @Html.ActionLink("Borrar Imagen", "DeleteImg", new { id = @item.Name })
                <text> @item.Name </text>
       
        </p>
    
    }
</div>


<div id="fuentesMovimiento">
@foreach (var fuente in Model.FuentesWEB)
{
    <p><strong>Fuente @fuente.Id</strong></p>
    <p><strong>Link: @fuente.Url</strong></p>
    <p><strong>DLL: @fuente.UrlDll</strong></p>
}
</div>
 

@using (Ajax.BeginForm("Fuentes", "Movimiento", new { id = Model.Id },
    new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "GET",
        UpdateTargetId = "fuentesMovimiento",
    }, new { id = "formFiltrado" }))
{
   <fieldset>
        <legend>Fuentes Web</legend>
        <p><strong>Url:</strong></p>
        <input type="text" name="url"  style="font-size: 1.2em; width:218xxpx"/>
        <p><strong>Dll:</strong></p>
        <input type="text" name="dll"  style="font-size: 1.2em; width:218xxpx"/>
  
        <input type="submit" value="Agregar Fuente"/>

    </fieldset>
}
    


 


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*<script type="text/javascript" src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0"></script>

      <script type="text/javascript">
          var map = null;
          var click;
          function getMap() {
              map = new Microsoft.Maps.Map(document.getElementById('myMap'), { credentials: 'AjKX5fPclkvH3YTYhLImWMour1KISHMrcFVBrXzVsjqwMLiWobOq83esCN1ra0Q0' });
          }

          //          function mapClickEventHandler() {
          //              click = Microsoft.Maps.Events.addHandler(map, 'click', displayInfo);
          //              alert('Perform action on map to fire this event');
          //          }
          //          function detachMapClickEventHandler() {
          //              Microsoft.Maps.Events.removeHandler(click);
          //              alert('event detached');
          //          }
          //          displayInfo = function (e) {
          //              var output = document.getElementById("output");
          //              if (!output) {
          //                  output = document.createElement("div");
          //                  output.id = "output";
          //                  document.body.appendChild(output);
          //              }
          //              output.innerHTML = "Event info - " + e.eventName + "<br><br>"
          //                           + "Window:" + e.originalEvent.screenX + "(x) " + e.originalEvent.screenY + "(y)<br>"
          //                           + "client:" + e.originalEvent.clientX + "(x) " + e.originalEvent.clientY + "(y)<br>"
          //                           + "Keychar:" + e.originalEvent.keyCode + "<br>"
          //                           + "keys  :" + e.originalEvent.altKey + "(alt) " + e.originalEvent.ctrlKey + "(ctrl) " + e.originalEvent.shiftKey + "(shift)<br>";
          //          };

          function setView() {
              map.setView({ zoom: 12, center: new Microsoft.Maps.Location("@Model.UbicacionLatitud", "@Model.UbicacionLongitud") });
          }

          endDragDetails = function (e) {

              var $UbicacionLatitud = $('#UbicacionLatitud');
              var valueLatitude = $UbicacionLatitud.val().split(",");
              //alert('Old UbicacionLatitud: ' + parseFloat(valueLatitude[0] + "." + valueLatitude[1]));
              var $UbicacionLongitud = $('#UbicacionLongitud');
              var valueLongitud = $UbicacionLongitud.val().split(",");
              //alert('Old UbicacionLongitud: ' + parseFloat(valueLongitud[0] + "." + valueLongitud[1]));

              valueLatitude = e.entity.getLocation().latitude.toString().split(".");
              $UbicacionLatitud.val(valueLatitude[0] + "," + valueLatitude[1]);
              //alert('New UbicacionLatitud: ' + $UbicacionLatitud.val());
              valueLongitud = e.entity.getLocation().longitude.toString().split(".");
              $UbicacionLongitud.val(valueLongitud[0] + "," + valueLongitud[1]);
              //alert('New UbicacionLongitud: ' + $UbicacionLongitud.val());


              //alert("Event Info - start drag \n" + "Start Latitude/Longitude: " + e.entity.getLocation());
          };

          function addPinPin(lon, lat) {
              var pushpinOptions = { draggable: true };

              var pushpin = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(lat, lon), pushpinOptions);
              var pushpindragend = Microsoft.Maps.Events.addHandler(pushpin, 'dragend', endDragDetails);
              map.entities.push(pushpin);
          }



          $(document).ready(function () {
              getMap(); setView(); $("#selectLogo").change(function () {




                  $("#Logo").val($(this).val());

              });
          });

          $(window).load(function () { addPinPin("@Model.UbicacionLongitud", "@Model.UbicacionLatitud"); });
          //$(window).load(function () { addPinPin(); });
          

</script>*@