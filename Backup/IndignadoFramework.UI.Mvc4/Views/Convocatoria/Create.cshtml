@model IndignadoFramework.Entities.Convocatoria


@{
    double latMov = (double)Session["latitudMov"];
    double longMov = (double)Session["longitudMov"];
}
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/themes/base/jquery.ui.all.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-datetimepicker.js")" type="text/javascript"></script>

<script type="text/javascript" src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0"></script>

<script type="text/javascript">
          var map = null;
          var click;
          function getMap() {
              map = new Microsoft.Maps.Map(document.getElementById('myMap'), { credentials: 'AjKX5fPclkvH3YTYhLImWMour1KISHMrcFVBrXzVsjqwMLiWobOq83esCN1ra0Q0' });
          }

          function mapClickEventHandler() {
              click = Microsoft.Maps.Events.addHandler(map, 'click', displayInfo);
              alert('Perform action on map to fire this event');
          }
          function detachMapClickEventHandler() {
              Microsoft.Maps.Events.removeHandler(click);
              alert('event detached');
          }
          displayInfo = function (e) {
              var output = document.getElementById("output");
              if (!output) {
                  output = document.createElement("div");
                  output.id = "output";
                  document.body.appendChild(output);
              }
              output.innerHTML = "Event info - " + e.eventName + "<br><br>"
                           + "Window:" + e.originalEvent.screenX + "(x) " + e.originalEvent.screenY + "(y)<br>"
                           + "client:" + e.originalEvent.clientX + "(x) " + e.originalEvent.clientY + "(y)<br>"
                           + "Keychar:" + e.originalEvent.keyCode + "<br>"
                           + "keys  :" + e.originalEvent.altKey + "(alt) " + e.originalEvent.ctrlKey + "(ctrl) " + e.originalEvent.shiftKey + "(shift)<br>";
          };

          function setView() {

              if ("@latMov".indexOf(",") != -1 || "@longMov".indexOf(",") != -1) {
                  var valueLatitude = "@latMov".split(",");
                  var valueLongitud = "@longMov".split(",");

                  map.setView({ zoom: 12, center: new Microsoft.Maps.Location(parseFloat(valueLatitude[0] + "." + valueLatitude[1]), parseFloat(valueLongitud[0] + "." + valueLongitud[1])) });
              } else {
                  map.setView({ zoom: 12, center: new Microsoft.Maps.Location(parseFloat("@latMov"), parseFloat("@longMov")) });
              }
              //map.setView({ zoom: 7, center: new Microsoft.Maps.Location('@latMov', '@longMov') });
          }

          

          function addPinPin(lon, lat) {
              var pushpinOptions = { draggable: true };

              if (lat.indexOf(",") != -1 || lon.indexOf(",") != -1) {
                  var valueLatitude = lat.split(",");
                  var valueLongitud = lon.split(",");

                  var pushpin = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(parseFloat(valueLatitude[0] + "." + valueLatitude[1]), parseFloat(valueLongitud[0] + "." + valueLongitud[1])), pushpinOptions);
                  var pushpindragend = Microsoft.Maps.Events.addHandler(pushpin, 'dragend', endDragDetails);
                  map.entities.push(pushpin);
              } else {
                  var pushpin = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(parseFloat(lat), parseFloat(lon)), pushpinOptions);
                  var pushpindragend = Microsoft.Maps.Events.addHandler(pushpin, 'dragend', endDragDetails);
                  map.entities.push(pushpin);
              }

          }

          function endDragDetails(e) 
          {
//              var valueLatitude = e.entity.getLocation().latitude.toString().split(".");
//              $('#UbicacionLatitud').val(valueLatitude[0] + "," + valueLatitude[1]);
//       
//              var valueLongitud = e.entity.getLocation().longitude.toString().split(".");
//              $('#UbicacionLongitud').val(valueLongitud[0] + "," + valueLongitud[1]);
              var $latitud = $('#UbicacionLatitud');
              var valueLatitude = $latitud.val();
              var $longitud = $('#UbicacionLongitud');
              var valueLongitud = $longitud.val();

              valueLatitude = e.entity.getLocation().latitude.toString();
              $latitud.val(valueLatitude);
              valueLongitud = e.entity.getLocation().longitude.toString();
              $longitud.val(valueLongitud);


          };

          $(document).ready(function () { getMap(); setView(); });
          $(window).load(function () { addPinPin('@longMov', '@latMov'); });



</script>


<script  type="text/javascript">
    $(function () {
        $("#datepicker2").datepicker({
        dateFormat: "mm/dd/yy",
        dayNamesMin: ["Do", "Lu", "Ma", "Mi", "Ju", "Vi", "Sa"],
        monthNames: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Setiembre", "Octubre", "Noviembre", "Diciembre"]
    });
    });
</script> 
<script  type="text/javascript">
    $(function () {
        $('#example1').datetimepicker({
            minDate: "#actualDate",
        timeText :"Hora",
        hourText :"Hora",
        minuteText :"Minuto",
        currentText: "Ahora",
        closeText: "Listo",
        dateFormat: "dd/mm/yy",
        dayNamesMin: ["Do", "Lu", "Ma", "Mi", "Ju", "Vi", "Sa"],
        monthNames: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Setiembre", "Octubre", "Noviembre", "Diciembre"]
    });
    });
</script> 
@{
    ViewBag.Title = "Create";
}

<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>

<div class="post">
<h2>Alta de Convocatoria</h2>


<div class="convocatoria">
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Titulo</legend>
        <div id="titulo">
            <div class="editor-field">
                @Html.EditorFor(model => model.Titulo)
                @Html.ValidationMessageFor(model => model.Titulo)
            </div>
        </div>
    </fieldset>
    <fieldset>
        <legend>Descripcion</legend>
        <div id="descripcion">
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Descripcion)
                @Html.ValidationMessageFor(model => model.Descripcion)
            </div>
        </div>
    </fieldset>
    <fieldset>
        <legend>Elije el Lugar de Encuentro</legend>
        
        <div>
            <div id='myMap' style="position:relative; width:auto; height:400px;"></div>
            <div id='output'> </div>
        </div>

        <input type="hidden" name="UbicacionLatitud" id="UbicacionLatitud" value='@latMov'/>
        <input type="hidden" name="UbicacionLongitud" id="UbicacionLongitud" value='@longMov'/>


     </fieldset>
     <fieldset>
         <div class="editor-label">
            @Html.LabelFor(model => model.Inicio)
         </div>
         <div class="editor-field">
            @{
                DateTime dt = DateTime.Now;
                string date = dt.Day+"/"+dt.Month+"/"+dt.Year+" "+dt.Hour+":"+dt.Minute;
                @:<input type="text" id="example1" name="inicio" value="@date"/>
            }
            @* 
            <input type="text" name="datepicker" id="datepicker2" readonly="readonly" value='@Model.Inicio' />
            @Html.TextBoxFor(model => model.Inicio, new { @class = "datepicker2" })
            @Html.ValidationMessageFor(model => model.Inicio)
            *@
         </div>
    
         <div class="editor-label">
            @Html.LabelFor(model => model.CategoriaTematicaId, "Categoría Temática")
         </div>
         <div class="editor-field">
            @Html.DropDownListFor(model => model.CategoriaTematicaId, (SelectList)ViewBag.Categorias)
            @Html.ValidationMessageFor(model => model.CategoriaTematicaId)
         </div>



         <div class="editor-label">
            @Html.LabelFor(model => model.Quorum)
         </div>
         <div class="editor-field">
            @Html.EditorFor(model => model.Quorum)
            @Html.ValidationMessageFor(model => model.Quorum)
         </div>
    </fieldset>
    <p>
        <input class="boton" type="submit" value="Crear" />
    </p>

}
 </div>
    </div>
