//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IndignadoFramework.UI.Mvc4.ChatService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessExecutionFault", Namespace="http://schemas.datacontract.org/2004/07/IndignadoFramework.Services.Contracts")]
    [System.SerializableAttribute()]
    public partial class ProcessExecutionFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChatService.IIntegracionService")]
    public interface IIntegracionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntegracionService/agregarMensaje", ReplyAction="http://tempuri.org/IIntegracionService/agregarMensajeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IndignadoFramework.UI.Mvc4.ChatService.ProcessExecutionFault), Action="http://tempuri.org/IIntegracionService/agregarMensajeProcessExecutionFaultFault", Name="ProcessExecutionFault", Namespace="http://schemas.datacontract.org/2004/07/IndignadoFramework.Services.Contracts")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IndignadoFramework.Entities.MensajeChatProjection))]
        void agregarMensaje(IndignadoFramework.Entities.MensajeChat mensaje);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIntegracionService/agregarMensaje", ReplyAction="http://tempuri.org/IIntegracionService/agregarMensajeResponse")]
        System.IAsyncResult BeginagregarMensaje(IndignadoFramework.Entities.MensajeChat mensaje, System.AsyncCallback callback, object asyncState);
        
        void EndagregarMensaje(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntegracionService/obtenerMensajes", ReplyAction="http://tempuri.org/IIntegracionService/obtenerMensajesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IndignadoFramework.UI.Mvc4.ChatService.ProcessExecutionFault), Action="http://tempuri.org/IIntegracionService/obtenerMensajesProcessExecutionFaultFault", Name="ProcessExecutionFault", Namespace="http://schemas.datacontract.org/2004/07/IndignadoFramework.Services.Contracts")]
        System.Collections.Generic.List<IndignadoFramework.Entities.MensajeChat> obtenerMensajes(int idRoom);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIntegracionService/obtenerMensajes", ReplyAction="http://tempuri.org/IIntegracionService/obtenerMensajesResponse")]
        System.IAsyncResult BeginobtenerMensajes(int idRoom, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<IndignadoFramework.Entities.MensajeChat> EndobtenerMensajes(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIntegracionServiceChannel : IndignadoFramework.UI.Mvc4.ChatService.IIntegracionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class obtenerMensajesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public obtenerMensajesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<IndignadoFramework.Entities.MensajeChat> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<IndignadoFramework.Entities.MensajeChat>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IntegracionServiceClient : System.ServiceModel.ClientBase<IndignadoFramework.UI.Mvc4.ChatService.IIntegracionService>, IndignadoFramework.UI.Mvc4.ChatService.IIntegracionService {
        
        private BeginOperationDelegate onBeginagregarMensajeDelegate;
        
        private EndOperationDelegate onEndagregarMensajeDelegate;
        
        private System.Threading.SendOrPostCallback onagregarMensajeCompletedDelegate;
        
        private BeginOperationDelegate onBeginobtenerMensajesDelegate;
        
        private EndOperationDelegate onEndobtenerMensajesDelegate;
        
        private System.Threading.SendOrPostCallback onobtenerMensajesCompletedDelegate;
        
        public IntegracionServiceClient() {
        }
        
        public IntegracionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IntegracionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IntegracionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IntegracionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> agregarMensajeCompleted;
        
        public event System.EventHandler<obtenerMensajesCompletedEventArgs> obtenerMensajesCompleted;
        
        public void agregarMensaje(IndignadoFramework.Entities.MensajeChat mensaje) {
            base.Channel.agregarMensaje(mensaje);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginagregarMensaje(IndignadoFramework.Entities.MensajeChat mensaje, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginagregarMensaje(mensaje, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndagregarMensaje(System.IAsyncResult result) {
            base.Channel.EndagregarMensaje(result);
        }
        
        private System.IAsyncResult OnBeginagregarMensaje(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IndignadoFramework.Entities.MensajeChat mensaje = ((IndignadoFramework.Entities.MensajeChat)(inValues[0]));
            return this.BeginagregarMensaje(mensaje, callback, asyncState);
        }
        
        private object[] OnEndagregarMensaje(System.IAsyncResult result) {
            this.EndagregarMensaje(result);
            return null;
        }
        
        private void OnagregarMensajeCompleted(object state) {
            if ((this.agregarMensajeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.agregarMensajeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void agregarMensajeAsync(IndignadoFramework.Entities.MensajeChat mensaje) {
            this.agregarMensajeAsync(mensaje, null);
        }
        
        public void agregarMensajeAsync(IndignadoFramework.Entities.MensajeChat mensaje, object userState) {
            if ((this.onBeginagregarMensajeDelegate == null)) {
                this.onBeginagregarMensajeDelegate = new BeginOperationDelegate(this.OnBeginagregarMensaje);
            }
            if ((this.onEndagregarMensajeDelegate == null)) {
                this.onEndagregarMensajeDelegate = new EndOperationDelegate(this.OnEndagregarMensaje);
            }
            if ((this.onagregarMensajeCompletedDelegate == null)) {
                this.onagregarMensajeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnagregarMensajeCompleted);
            }
            base.InvokeAsync(this.onBeginagregarMensajeDelegate, new object[] {
                        mensaje}, this.onEndagregarMensajeDelegate, this.onagregarMensajeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<IndignadoFramework.Entities.MensajeChat> obtenerMensajes(int idRoom) {
            return base.Channel.obtenerMensajes(idRoom);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginobtenerMensajes(int idRoom, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginobtenerMensajes(idRoom, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<IndignadoFramework.Entities.MensajeChat> EndobtenerMensajes(System.IAsyncResult result) {
            return base.Channel.EndobtenerMensajes(result);
        }
        
        private System.IAsyncResult OnBeginobtenerMensajes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int idRoom = ((int)(inValues[0]));
            return this.BeginobtenerMensajes(idRoom, callback, asyncState);
        }
        
        private object[] OnEndobtenerMensajes(System.IAsyncResult result) {
            System.Collections.Generic.List<IndignadoFramework.Entities.MensajeChat> retVal = this.EndobtenerMensajes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnobtenerMensajesCompleted(object state) {
            if ((this.obtenerMensajesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.obtenerMensajesCompleted(this, new obtenerMensajesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void obtenerMensajesAsync(int idRoom) {
            this.obtenerMensajesAsync(idRoom, null);
        }
        
        public void obtenerMensajesAsync(int idRoom, object userState) {
            if ((this.onBeginobtenerMensajesDelegate == null)) {
                this.onBeginobtenerMensajesDelegate = new BeginOperationDelegate(this.OnBeginobtenerMensajes);
            }
            if ((this.onEndobtenerMensajesDelegate == null)) {
                this.onEndobtenerMensajesDelegate = new EndOperationDelegate(this.OnEndobtenerMensajes);
            }
            if ((this.onobtenerMensajesCompletedDelegate == null)) {
                this.onobtenerMensajesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnobtenerMensajesCompleted);
            }
            base.InvokeAsync(this.onBeginobtenerMensajesDelegate, new object[] {
                        idRoom}, this.onEndobtenerMensajesDelegate, this.onobtenerMensajesCompletedDelegate, userState);
        }
    }
}
