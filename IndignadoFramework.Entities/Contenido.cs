//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;


namespace IndignadoFramework.Entities
{
    [Serializable]
    [DataContractAttribute(IsReference = true)]
    [KnownType(typeof(ContenidoProjection))]
    [MetadataType(typeof(ContenidoMetaData))]
    public partial class Contenido 
    {
        #region Primitive Properties
    
        [DataMemberAttribute()]
        public virtual int Id
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual string Ubicacion
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual string Tipo
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual System.DateTime FechaPosteado
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual int CategoriaTematicaId
        {
            get { return _categoriaTematicaId; }
            set
            {
                if (_categoriaTematicaId != value)
                {
                    if (CategoriaTematica != null && CategoriaTematica.Id != value)
                    {
                        CategoriaTematica = null;
                    }
                    _categoriaTematicaId = value;
                }
            }
        }
        private int _categoriaTematicaId;
    
        [DataMemberAttribute()]
        public virtual int Inadecuado
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual int EspecificacionUsuarioId
        {
            get { return _especificacionUsuarioId; }
            set
            {
                if (_especificacionUsuarioId != value)
                {
                    if (EspecificacionUsuario != null && EspecificacionUsuario.Id != value)
                    {
                        EspecificacionUsuario = null;
                    }
                    _especificacionUsuarioId = value;
                }
            }
        }
        private int _especificacionUsuarioId;
    
        [DataMemberAttribute()]
        public virtual string Titulo
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual int CantMeGusta
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual bool Habilitado
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        [DataMemberAttribute()]
        public virtual CategoriaTematica CategoriaTematica
        {
            get { return _categoriaTematica; }
            set
            {
                if (!ReferenceEquals(_categoriaTematica, value))
                {
                    var previousValue = _categoriaTematica;
                    _categoriaTematica = value;
                    FixupCategoriaTematica(previousValue);
                }
            }
        }
        private CategoriaTematica _categoriaTematica;
    
        [DataMemberAttribute()]
        public virtual ICollection<Megusta> Megusta
        {
            get
            {
                if (_megusta == null)
                {
                    var newCollection = new FixupCollection<Megusta>();
                    newCollection.CollectionChanged += FixupMegusta;
                    _megusta = newCollection;
                }
                return _megusta;
            }
            set
            {
                if (!ReferenceEquals(_megusta, value))
                {
                    var previousValue = _megusta as FixupCollection<Megusta>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMegusta;
                    }
                    _megusta = value;
                    var newValue = value as FixupCollection<Megusta>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMegusta;
                    }
                }
            }
        }
        private ICollection<Megusta> _megusta;
    
        [DataMemberAttribute()]
        public virtual EspecificacionUsuario EspecificacionUsuario
        {
            get { return _especificacionUsuario; }
            set
            {
                if (!ReferenceEquals(_especificacionUsuario, value))
                {
                    var previousValue = _especificacionUsuario;
                    _especificacionUsuario = value;
                    FixupEspecificacionUsuario(previousValue);
                }
            }
        }
        private EspecificacionUsuario _especificacionUsuario;
    
        [DataMemberAttribute()]
        public virtual ICollection<EspecificacionUsuario> Inadecuados
        {
            get
            {
                if (_inadecuados == null)
                {
                    var newCollection = new FixupCollection<EspecificacionUsuario>();
                    newCollection.CollectionChanged += FixupInadecuados;
                    _inadecuados = newCollection;
                }
                return _inadecuados;
            }
            set
            {
                if (!ReferenceEquals(_inadecuados, value))
                {
                    var previousValue = _inadecuados as FixupCollection<EspecificacionUsuario>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupInadecuados;
                    }
                    _inadecuados = value;
                    var newValue = value as FixupCollection<EspecificacionUsuario>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupInadecuados;
                    }
                }
            }
        }
        private ICollection<EspecificacionUsuario> _inadecuados;

        #endregion
        #region Association Fixup
    
        private void FixupCategoriaTematica(CategoriaTematica previousValue)
        {
            if (previousValue != null && previousValue.Contenidos.Contains(this))
            {
                previousValue.Contenidos.Remove(this);
            }
    
            if (CategoriaTematica != null)
            {
                if (!CategoriaTematica.Contenidos.Contains(this))
                {
                    CategoriaTematica.Contenidos.Add(this);
                }
                if (CategoriaTematicaId != CategoriaTematica.Id)
                {
                    CategoriaTematicaId = CategoriaTematica.Id;
                }
            }
        }
    
        private void FixupEspecificacionUsuario(EspecificacionUsuario previousValue)
        {
            if (previousValue != null && previousValue.Contenidos.Contains(this))
            {
                previousValue.Contenidos.Remove(this);
            }
    
            if (EspecificacionUsuario != null)
            {
                if (!EspecificacionUsuario.Contenidos.Contains(this))
                {
                    EspecificacionUsuario.Contenidos.Add(this);
                }
                if (EspecificacionUsuarioId != EspecificacionUsuario.Id)
                {
                    EspecificacionUsuarioId = EspecificacionUsuario.Id;
                }
            }
        }
    
        private void FixupMegusta(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Megusta item in e.NewItems)
                {
                    item.Contenido = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Megusta item in e.OldItems)
                {
                    if (ReferenceEquals(item.Contenido, this))
                    {
                        item.Contenido = null;
                    }
                }
            }
        }
    
        private void FixupInadecuados(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EspecificacionUsuario item in e.NewItems)
                {
                    if (!item.Contenido.Contains(this))
                    {
                        item.Contenido.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EspecificacionUsuario item in e.OldItems)
                {
                    if (item.Contenido.Contains(this))
                    {
                        item.Contenido.Remove(this);
                    }
                }
            }
        }

        #endregion
    }
}
