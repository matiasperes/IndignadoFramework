//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;


namespace IndignadoFramework.Entities
{
    [Serializable]
    [DataContractAttribute(IsReference = true)]
    [KnownType(typeof(ConvocatoriaProjection))]
    [MetadataType(typeof(ConvocatoriaMetaData))]
    public partial class Convocatoria 
    {
        #region Primitive Properties
    
        [DataMemberAttribute()]
        public virtual int Id
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual System.DateTime Inicio
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual double UbicacionLatitud
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual double UbicacionLongitud
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual string Descripcion
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual int Quorum
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual string Titulo
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual int MovimientoId
        {
            get { return _movimientoId; }
            set
            {
                if (_movimientoId != value)
                {
                    if (Movimiento != null && Movimiento.Id != value)
                    {
                        Movimiento = null;
                    }
                    _movimientoId = value;
                }
            }
        }
        private int _movimientoId;
    
        [DataMemberAttribute()]
        public virtual int CategoriaTematicaId
        {
            get { return _categoriaTematicaId; }
            set
            {
                if (_categoriaTematicaId != value)
                {
                    if (CategoriaTematica != null && CategoriaTematica.Id != value)
                    {
                        CategoriaTematica = null;
                    }
                    _categoriaTematicaId = value;
                }
            }
        }
        private int _categoriaTematicaId;
    
        [DataMemberAttribute()]
        public virtual int CantUsuariosConfirmados
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual bool Suspendida
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        [DataMemberAttribute()]
        public virtual ICollection<EspecificacionUsuario> UsuariosConfirmados
        {
            get
            {
                if (_usuariosConfirmados == null)
                {
                    var newCollection = new FixupCollection<EspecificacionUsuario>();
                    newCollection.CollectionChanged += FixupUsuariosConfirmados;
                    _usuariosConfirmados = newCollection;
                }
                return _usuariosConfirmados;
            }
            set
            {
                if (!ReferenceEquals(_usuariosConfirmados, value))
                {
                    var previousValue = _usuariosConfirmados as FixupCollection<EspecificacionUsuario>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUsuariosConfirmados;
                    }
                    _usuariosConfirmados = value;
                    var newValue = value as FixupCollection<EspecificacionUsuario>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUsuariosConfirmados;
                    }
                }
            }
        }
        private ICollection<EspecificacionUsuario> _usuariosConfirmados;
    
        [DataMemberAttribute()]
        public virtual Movimiento Movimiento
        {
            get { return _movimiento; }
            set
            {
                if (!ReferenceEquals(_movimiento, value))
                {
                    var previousValue = _movimiento;
                    _movimiento = value;
                    FixupMovimiento(previousValue);
                }
            }
        }
        private Movimiento _movimiento;
    
        [DataMemberAttribute()]
        public virtual CategoriaTematica CategoriaTematica
        {
            get { return _categoriaTematica; }
            set
            {
                if (!ReferenceEquals(_categoriaTematica, value))
                {
                    var previousValue = _categoriaTematica;
                    _categoriaTematica = value;
                    FixupCategoriaTematica(previousValue);
                }
            }
        }
        private CategoriaTematica _categoriaTematica;

        #endregion
        #region Association Fixup
    
        private void FixupMovimiento(Movimiento previousValue)
        {
            if (previousValue != null && previousValue.Convocatorias.Contains(this))
            {
                previousValue.Convocatorias.Remove(this);
            }
    
            if (Movimiento != null)
            {
                if (!Movimiento.Convocatorias.Contains(this))
                {
                    Movimiento.Convocatorias.Add(this);
                }
                if (MovimientoId != Movimiento.Id)
                {
                    MovimientoId = Movimiento.Id;
                }
            }
        }
    
        private void FixupCategoriaTematica(CategoriaTematica previousValue)
        {
            if (previousValue != null && previousValue.Convocatorias.Contains(this))
            {
                previousValue.Convocatorias.Remove(this);
            }
    
            if (CategoriaTematica != null)
            {
                if (!CategoriaTematica.Convocatorias.Contains(this))
                {
                    CategoriaTematica.Convocatorias.Add(this);
                }
                if (CategoriaTematicaId != CategoriaTematica.Id)
                {
                    CategoriaTematicaId = CategoriaTematica.Id;
                }
            }
        }
    
        private void FixupUsuariosConfirmados(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EspecificacionUsuario item in e.NewItems)
                {
                    if (!item.AsisteAConvocatorias.Contains(this))
                    {
                        item.AsisteAConvocatorias.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EspecificacionUsuario item in e.OldItems)
                {
                    if (item.AsisteAConvocatorias.Contains(this))
                    {
                        item.AsisteAConvocatorias.Remove(this);
                    }
                }
            }
        }

        #endregion
    }
}
