//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;


namespace IndignadoFramework.Entities
{
    [Serializable]
    [DataContractAttribute(IsReference = true)]
    [KnownType(typeof(MovimientoProjection))]
    [MetadataType(typeof(MovimientoMetaData))]
    public partial class Movimiento 
    {
        #region Primitive Properties
    
        [DataMemberAttribute()]
        public virtual int Id
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual string Nombre
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual Nullable<double> UbicacionLatitud
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual Nullable<double> UbicacionLongitud
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual string Descripcion
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual string Logo
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual string Estilo
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual int M
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual int N
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual int X
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual int Z
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        [DataMemberAttribute()]
        public virtual ICollection<Convocatoria> Convocatorias
        {
            get
            {
                if (_convocatorias == null)
                {
                    var newCollection = new FixupCollection<Convocatoria>();
                    newCollection.CollectionChanged += FixupConvocatorias;
                    _convocatorias = newCollection;
                }
                return _convocatorias;
            }
            set
            {
                if (!ReferenceEquals(_convocatorias, value))
                {
                    var previousValue = _convocatorias as FixupCollection<Convocatoria>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupConvocatorias;
                    }
                    _convocatorias = value;
                    var newValue = value as FixupCollection<Convocatoria>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupConvocatorias;
                    }
                }
            }
        }
        private ICollection<Convocatoria> _convocatorias;
    
        [DataMemberAttribute()]
        public virtual ICollection<EspecificacionUsuario> Usuarios
        {
            get
            {
                if (_usuarios == null)
                {
                    var newCollection = new FixupCollection<EspecificacionUsuario>();
                    newCollection.CollectionChanged += FixupUsuarios;
                    _usuarios = newCollection;
                }
                return _usuarios;
            }
            set
            {
                if (!ReferenceEquals(_usuarios, value))
                {
                    var previousValue = _usuarios as FixupCollection<EspecificacionUsuario>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUsuarios;
                    }
                    _usuarios = value;
                    var newValue = value as FixupCollection<EspecificacionUsuario>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUsuarios;
                    }
                }
            }
        }
        private ICollection<EspecificacionUsuario> _usuarios;
    
        [DataMemberAttribute()]
        public virtual ICollection<FuenteWEB> FuentesWEB
        {
            get
            {
                if (_fuentesWEB == null)
                {
                    var newCollection = new FixupCollection<FuenteWEB>();
                    newCollection.CollectionChanged += FixupFuentesWEB;
                    _fuentesWEB = newCollection;
                }
                return _fuentesWEB;
            }
            set
            {
                if (!ReferenceEquals(_fuentesWEB, value))
                {
                    var previousValue = _fuentesWEB as FixupCollection<FuenteWEB>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupFuentesWEB;
                    }
                    _fuentesWEB = value;
                    var newValue = value as FixupCollection<FuenteWEB>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupFuentesWEB;
                    }
                }
            }
        }
        private ICollection<FuenteWEB> _fuentesWEB;

        #endregion
        #region Association Fixup
    
        private void FixupConvocatorias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Convocatoria item in e.NewItems)
                {
                    item.Movimiento = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Convocatoria item in e.OldItems)
                {
                    if (ReferenceEquals(item.Movimiento, this))
                    {
                        item.Movimiento = null;
                    }
                }
            }
        }
    
        private void FixupUsuarios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EspecificacionUsuario item in e.NewItems)
                {
                    item.Movimiento = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EspecificacionUsuario item in e.OldItems)
                {
                    if (ReferenceEquals(item.Movimiento, this))
                    {
                        item.Movimiento = null;
                    }
                }
            }
        }
    
        private void FixupFuentesWEB(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (FuenteWEB item in e.NewItems)
                {
                    item.Movimiento = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FuenteWEB item in e.OldItems)
                {
                    if (ReferenceEquals(item.Movimiento, this))
                    {
                        item.Movimiento = null;
                    }
                }
            }
        }

        #endregion
    }
}
