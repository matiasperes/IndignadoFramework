//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;


namespace IndignadoFramework.Entities
{
    [Serializable]
    [DataContractAttribute(IsReference = true)]
    [KnownType(typeof(EspecificacionUsuarioProjection))]
    [MetadataType(typeof(EspecificacionUsuarioMetaData))]
    public partial class EspecificacionUsuario 
    {
        #region Primitive Properties
    
        [DataMemberAttribute()]
        public virtual int Id
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual double UbicacionLatitud
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual double UbicacionLongitud
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual string Membership
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual string Nombre
        {
            get;
            set;
        }
    
        [DataMemberAttribute()]
        public virtual int MovimientoId
        {
            get { return _movimientoId; }
            set
            {
                if (_movimientoId != value)
                {
                    if (Movimiento != null && Movimiento.Id != value)
                    {
                        Movimiento = null;
                    }
                    _movimientoId = value;
                }
            }
        }
        private int _movimientoId;
    
        [DataMemberAttribute()]
        public virtual int BajasContenido
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        [DataMemberAttribute()]
        public virtual ICollection<Convocatoria> AsisteAConvocatorias
        {
            get
            {
                if (_asisteAConvocatorias == null)
                {
                    var newCollection = new FixupCollection<Convocatoria>();
                    newCollection.CollectionChanged += FixupAsisteAConvocatorias;
                    _asisteAConvocatorias = newCollection;
                }
                return _asisteAConvocatorias;
            }
            set
            {
                if (!ReferenceEquals(_asisteAConvocatorias, value))
                {
                    var previousValue = _asisteAConvocatorias as FixupCollection<Convocatoria>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAsisteAConvocatorias;
                    }
                    _asisteAConvocatorias = value;
                    var newValue = value as FixupCollection<Convocatoria>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAsisteAConvocatorias;
                    }
                }
            }
        }
        private ICollection<Convocatoria> _asisteAConvocatorias;
    
        [DataMemberAttribute()]
        public virtual ICollection<CategoriaTematica> CategoriasTematicas
        {
            get
            {
                if (_categoriasTematicas == null)
                {
                    var newCollection = new FixupCollection<CategoriaTematica>();
                    newCollection.CollectionChanged += FixupCategoriasTematicas;
                    _categoriasTematicas = newCollection;
                }
                return _categoriasTematicas;
            }
            set
            {
                if (!ReferenceEquals(_categoriasTematicas, value))
                {
                    var previousValue = _categoriasTematicas as FixupCollection<CategoriaTematica>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCategoriasTematicas;
                    }
                    _categoriasTematicas = value;
                    var newValue = value as FixupCollection<CategoriaTematica>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCategoriasTematicas;
                    }
                }
            }
        }
        private ICollection<CategoriaTematica> _categoriasTematicas;
    
        [DataMemberAttribute()]
        public virtual Movimiento Movimiento
        {
            get { return _movimiento; }
            set
            {
                if (!ReferenceEquals(_movimiento, value))
                {
                    var previousValue = _movimiento;
                    _movimiento = value;
                    FixupMovimiento(previousValue);
                }
            }
        }
        private Movimiento _movimiento;
    
        [DataMemberAttribute()]
        public virtual ICollection<Contenido> Contenidos
        {
            get
            {
                if (_contenidos == null)
                {
                    var newCollection = new FixupCollection<Contenido>();
                    newCollection.CollectionChanged += FixupContenidos;
                    _contenidos = newCollection;
                }
                return _contenidos;
            }
            set
            {
                if (!ReferenceEquals(_contenidos, value))
                {
                    var previousValue = _contenidos as FixupCollection<Contenido>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupContenidos;
                    }
                    _contenidos = value;
                    var newValue = value as FixupCollection<Contenido>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupContenidos;
                    }
                }
            }
        }
        private ICollection<Contenido> _contenidos;
    
        [DataMemberAttribute()]
        public virtual ICollection<Megusta> Megusta
        {
            get
            {
                if (_megusta == null)
                {
                    var newCollection = new FixupCollection<Megusta>();
                    newCollection.CollectionChanged += FixupMegusta;
                    _megusta = newCollection;
                }
                return _megusta;
            }
            set
            {
                if (!ReferenceEquals(_megusta, value))
                {
                    var previousValue = _megusta as FixupCollection<Megusta>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMegusta;
                    }
                    _megusta = value;
                    var newValue = value as FixupCollection<Megusta>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMegusta;
                    }
                }
            }
        }
        private ICollection<Megusta> _megusta;
    
        [DataMemberAttribute()]
        public virtual ICollection<Contenido> Contenido
        {
            get
            {
                if (_contenido == null)
                {
                    var newCollection = new FixupCollection<Contenido>();
                    newCollection.CollectionChanged += FixupContenido;
                    _contenido = newCollection;
                }
                return _contenido;
            }
            set
            {
                if (!ReferenceEquals(_contenido, value))
                {
                    var previousValue = _contenido as FixupCollection<Contenido>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupContenido;
                    }
                    _contenido = value;
                    var newValue = value as FixupCollection<Contenido>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupContenido;
                    }
                }
            }
        }
        private ICollection<Contenido> _contenido;

        #endregion
        #region Association Fixup
    
        private void FixupMovimiento(Movimiento previousValue)
        {
            if (previousValue != null && previousValue.Usuarios.Contains(this))
            {
                previousValue.Usuarios.Remove(this);
            }
    
            if (Movimiento != null)
            {
                if (!Movimiento.Usuarios.Contains(this))
                {
                    Movimiento.Usuarios.Add(this);
                }
                if (MovimientoId != Movimiento.Id)
                {
                    MovimientoId = Movimiento.Id;
                }
            }
        }
    
        private void FixupAsisteAConvocatorias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Convocatoria item in e.NewItems)
                {
                    if (!item.UsuariosConfirmados.Contains(this))
                    {
                        item.UsuariosConfirmados.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Convocatoria item in e.OldItems)
                {
                    if (item.UsuariosConfirmados.Contains(this))
                    {
                        item.UsuariosConfirmados.Remove(this);
                    }
                }
            }
        }
    
        private void FixupCategoriasTematicas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CategoriaTematica item in e.NewItems)
                {
                    if (!item.Usuarios.Contains(this))
                    {
                        item.Usuarios.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CategoriaTematica item in e.OldItems)
                {
                    if (item.Usuarios.Contains(this))
                    {
                        item.Usuarios.Remove(this);
                    }
                }
            }
        }
    
        private void FixupContenidos(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Contenido item in e.NewItems)
                {
                    item.EspecificacionUsuario = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Contenido item in e.OldItems)
                {
                    if (ReferenceEquals(item.EspecificacionUsuario, this))
                    {
                        item.EspecificacionUsuario = null;
                    }
                }
            }
        }
    
        private void FixupMegusta(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Megusta item in e.NewItems)
                {
                    item.EspecificacionUsuario = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Megusta item in e.OldItems)
                {
                    if (ReferenceEquals(item.EspecificacionUsuario, this))
                    {
                        item.EspecificacionUsuario = null;
                    }
                }
            }
        }
    
        private void FixupContenido(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Contenido item in e.NewItems)
                {
                    if (!item.Inadecuados.Contains(this))
                    {
                        item.Inadecuados.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Contenido item in e.OldItems)
                {
                    if (item.Inadecuados.Contains(this))
                    {
                        item.Inadecuados.Remove(this);
                    }
                }
            }
        }

        #endregion
    }
}
